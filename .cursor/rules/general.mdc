---
alwaysApply: true
---

# Cursor Rules for CRM Project

## General Guidelines

https://developer.mozilla.org/ 를 참고해서 접근성에 맞게 구현해줘

## 변수 네이밍

`tailwind.config.js`를 참고해서 색상을 맞춰줘. `global.css` 를 보고 폰트를 맞춰줘

1. **해당 변수명으로 네이밍을 해줘**

- 검색어: searchText

## Architecture

### MVVM Pattern

- **ViewModel**: React 컴포넌트의 상태와 로직을 관리하는 custom Hook으로 구현
- **Model**: 데이터와 관련된 로직을 포함하는 클래스로 구현
- **Component**: React 컴포넌트는 ViewModel을 사용하여 UI를 구성

### Folder Structure

- `domains/**/hooks/` 폴더에 custom Hook 파일을 위치
- `domains/**/components/` 폴더에 컴포넌트 파일을 위치

## Component Architecture

- Compound Components 패턴 활용
- Render Props 또는 Custom Hooks로 로직 분리
- Props가 5개 이상일 경우, 객체로 묶어서 전달하거나 다른 컴포넌트로 분리
- Props Interface는 generic으로 확장 가능하게 설계

## State Management Strategy

- Local State: useState + useReducer
- Client State: Zustand (Redux 지양)
- Server State: TanStack Query (React Query)

## Functional Programming

- lodash를 적극적으로 활용
- 함수를 순수함수의 조합으로 작성

## Performance Optimization

- React.memo 적절한 사용
- useMemo, useCallback 필요시에만 사용
- Code Splitting (React.lazy + Suspense)
- Image Optimization (Next.js Image 컴포넌트)

## Accessibility (A11y)

- WCAG 2.1 AA 레벨 준수
- 키보드 내비게이션 지원
- Screen Reader 호환
- Semantic HTML 사용

# Cursor Rules for CRM Project

## General Guidelines
